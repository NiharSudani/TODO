{"ast":null,"code":"var _jsxFileName = \"D:\\\\Projects\\\\ToDO\\\\client\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  // State for tasks and selected date\n  const [tasks, setTasks] = useState([]);\n  const [selectedDate, setSelectedDate] = useState(new Date().toISOString().slice(0, 10));\n  const [newTask, setNewTask] = useState({\n    title: '',\n    description: ''\n  });\n\n  // Fetch tasks from backend (replace URL with your backend if needed)\n  useEffect(() => {\n    fetch('http://localhost:5000/api/tasks').then(res => res.json()).then(data => setTasks(data)).catch(() => setTasks([]));\n  }, []);\n\n  // Add new task\n  const handleAddTask = e => {\n    e.preventDefault();\n    if (!newTask.title) return;\n    fetch('http://localhost:5000/api/tasks', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        ...newTask,\n        date: selectedDate\n      })\n    }).then(res => res.json()).then(task => setTasks([...tasks, task]));\n    setNewTask({\n      title: '',\n      description: ''\n    });\n  };\n\n  // Mark task as done\n  const handleDone = id => {\n    fetch(`http://localhost:5000/api/tasks/${id}/done`, {\n      method: 'PATCH'\n    }).then(res => res.json()).then(updated => setTasks(tasks.map(t => t._id === id ? updated : t)));\n  };\n\n  // Filter tasks for selected date\n  const tasksForDate = tasks.filter(t => t.date && t.date.slice(0, 10) === selectedDate);\n\n  // Simple calendar: just a date picker\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    style: {\n      maxWidth: 500,\n      margin: '0 auto',\n      padding: 20\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"To-Do List Web App\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginBottom: 20\n      },\n      children: /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"\\uD83D\\uDCC5 Select Date:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"date\",\n          value: selectedDate,\n          onChange: e => setSelectedDate(e.target.value),\n          style: {\n            marginLeft: 10\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleAddTask,\n      style: {\n        marginBottom: 20\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Task title\",\n        value: newTask.title,\n        onChange: e => setNewTask({\n          ...newTask,\n          title: e.target.value\n        }),\n        required: true,\n        style: {\n          marginRight: 10\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Description (optional)\",\n        value: newTask.description,\n        onChange: e => setNewTask({\n          ...newTask,\n          description: e.target.value\n        }),\n        style: {\n          marginRight: 10\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Add\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"Tasks for \", selectedDate]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      style: {\n        listStyle: 'none',\n        padding: 0\n      },\n      children: [tasksForDate.length === 0 && /*#__PURE__*/_jsxDEV(\"li\", {\n        children: \"No tasks for this date.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 39\n      }, this), tasksForDate.map(task => /*#__PURE__*/_jsxDEV(\"li\", {\n        style: {\n          marginBottom: 10,\n          textDecoration: task.done ? 'line-through' : 'none'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"checkbox\",\n          checked: task.done,\n          onChange: () => handleDone(task._id),\n          disabled: task.done,\n          style: {\n            marginRight: 8\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"strong\", {\n          children: task.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 13\n        }, this), task.description && /*#__PURE__*/_jsxDEV(\"span\", {\n          children: [\" - \", task.description]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 34\n        }, this)]\n      }, task._id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"J4eQfpi4ve0RJ8rJ+bohY1u8S6Y=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","App","_s","tasks","setTasks","selectedDate","setSelectedDate","Date","toISOString","slice","newTask","setNewTask","title","description","fetch","then","res","json","data","catch","handleAddTask","e","preventDefault","method","headers","body","JSON","stringify","date","task","handleDone","id","updated","map","t","_id","tasksForDate","filter","className","style","maxWidth","margin","padding","children","fileName","_jsxFileName","lineNumber","columnNumber","marginBottom","type","value","onChange","target","marginLeft","onSubmit","placeholder","required","marginRight","listStyle","length","textDecoration","done","checked","disabled","_c","$RefreshReg$"],"sources":["D:/Projects/ToDO/client/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\n\r\nfunction App() {\r\n  // State for tasks and selected date\r\n  const [tasks, setTasks] = useState([]);\r\n  const [selectedDate, setSelectedDate] = useState(new Date().toISOString().slice(0, 10));\r\n  const [newTask, setNewTask] = useState({ title: '', description: '' });\r\n\r\n  // Fetch tasks from backend (replace URL with your backend if needed)\r\n  useEffect(() => {\r\n    fetch('http://localhost:5000/api/tasks')\r\n      .then(res => res.json())\r\n      .then(data => setTasks(data))\r\n      .catch(() => setTasks([]));\r\n  }, []);\r\n\r\n  // Add new task\r\n  const handleAddTask = (e) => {\r\n    e.preventDefault();\r\n    if (!newTask.title) return;\r\n    fetch('http://localhost:5000/api/tasks', {\r\n      method: 'POST',\r\n      headers: { 'Content-Type': 'application/json' },\r\n      body: JSON.stringify({\r\n        ...newTask,\r\n        date: selectedDate\r\n      })\r\n    })\r\n      .then(res => res.json())\r\n      .then(task => setTasks([...tasks, task]));\r\n    setNewTask({ title: '', description: '' });\r\n  };\r\n\r\n  // Mark task as done\r\n  const handleDone = (id) => {\r\n    fetch(`http://localhost:5000/api/tasks/${id}/done`, { method: 'PATCH' })\r\n      .then(res => res.json())\r\n      .then(updated => setTasks(tasks.map(t => t._id === id ? updated : t)));\r\n  };\r\n\r\n  // Filter tasks for selected date\r\n  const tasksForDate = tasks.filter(t => t.date && t.date.slice(0, 10) === selectedDate);\r\n\r\n  // Simple calendar: just a date picker\r\n  return (\r\n    <div className=\"App\" style={{ maxWidth: 500, margin: '0 auto', padding: 20 }}>\r\n      <h1>To-Do List Web App</h1>\r\n      <div style={{ marginBottom: 20 }}>\r\n        <label>\r\n          ðŸ“… Select Date:\r\n          <input\r\n            type=\"date\"\r\n            value={selectedDate}\r\n            onChange={e => setSelectedDate(e.target.value)}\r\n            style={{ marginLeft: 10 }}\r\n          />\r\n        </label>\r\n      </div>\r\n      <form onSubmit={handleAddTask} style={{ marginBottom: 20 }}>\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Task title\"\r\n          value={newTask.title}\r\n          onChange={e => setNewTask({ ...newTask, title: e.target.value })}\r\n          required\r\n          style={{ marginRight: 10 }}\r\n        />\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Description (optional)\"\r\n          value={newTask.description}\r\n          onChange={e => setNewTask({ ...newTask, description: e.target.value })}\r\n          style={{ marginRight: 10 }}\r\n        />\r\n        <button type=\"submit\">Add</button>\r\n      </form>\r\n      <h2>Tasks for {selectedDate}</h2>\r\n      <ul style={{ listStyle: 'none', padding: 0 }}>\r\n        {tasksForDate.length === 0 && <li>No tasks for this date.</li>}\r\n        {tasksForDate.map(task => (\r\n          <li key={task._id} style={{ marginBottom: 10, textDecoration: task.done ? 'line-through' : 'none' }}>\r\n            <input\r\n              type=\"checkbox\"\r\n              checked={task.done}\r\n              onChange={() => handleDone(task._id)}\r\n              disabled={task.done}\r\n              style={{ marginRight: 8 }}\r\n            />\r\n            <strong>{task.title}</strong>\r\n            {task.description && <span> - {task.description}</span>}\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}